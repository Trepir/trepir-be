
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  firstName String
  lastName String
  displayName String
  email String
  uid String
  photoUrl String
  trips Trip[]
  favoriteActivities FavoriteActivity[]
  activities Activity[]


}

model Trip {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  userId String 
  startDate DateTime
  endDate DateTime
  name String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model TripActivity {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  activityId String
  tripId String
  day String
}

model FavoriteActivity {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  activityId String
  userId String
  tripId String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  activity Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)


}

model Acomodation {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  locationId Int
  startDate DateTime
  endDate DateTime
  tripId String
}

model TravelEvent {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  type Int
  departure DateTime
  arrival DateTime
  origin String
  destination String
  tripId String
}

model Activity {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  name String
  duration Float
  description String
  time DateTime?
  rating Int?
  locationId String
  location Location @relation(fields: [locationId], references: [id], onDelete: Cascade)
  tags ActivityTag[]
  creatorId String
  creator User @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  favoriteActivities FavoriteActivity[]

}

model Location {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  latitude Float
  longitude Float
  country String
  state String
  locationName String
  city String
  googleId String?
  activity Activity[]
}
model ActivityTag {
  id String @id @default(cuid())
  activityId String
  tagId String
  activity Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  tag Tag @relation(fields: [tagId], references: [id], onDelete: Cascade)
}
model Tag {
  id String @id @default(cuid())
  tag String
  activities ActivityTag[]
}





